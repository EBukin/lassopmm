% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impute_data.R
\name{impute_data}
\alias{impute_data}
\title{Impute data to from the period 0 dataframe to the period 1 using "lassopmm" logic.}
\usage{
impute_data(period_0, period_1, dep_var, indep_var, weight_var = NULL,
  extra_var = NULL, n_near = 10, n_boot = 5, group_boot_var = NULL,
  force_boot = NULL, n_folds = 10, reduced = TRUE)
}
\arguments{
\item{period_0, period_1}{dataframes with the period 0 and period 1 data
respectively. These dataframes have to contain same columns with the
identical names and variable types. If this is violated, errors may
appear in the process of running the function.}

\item{dep_var}{character vector with one name of the dependent variable.}

\item{indep_var}{character vector with the names of independent variables.}

\item{weight_var}{character vector with one name of the weight variable.
Default is `NULL`, when `NULL` equall weights of 1 for each obesrcation
are assumed.}

\item{extra_var, group_boot_var}{character vectors. Could be \code{NULL}, contain
one element or a vector of multiple lements. \code{extra_var} represents
names of the variable, which should be joint from the \code{period_0} data to
the \code{period_1} data based on the match by the dependent variable \code{dep_var}.}

\item{n_near}{number of the nearest observations to derive a random match.
If `n_near` is greater than `length(match_vector)`, minimum out of two is
used to create a sample for selecting a random match value.}

\item{n_boot}{number of bootsrtapping iterations.}

\item{force_boot}{bootstrapping permutation vector externally defined. Default
is \code{NULL}. Has to be provided a dataframe, where each column represent
indexes of the resampled observations for each bootsrtap iteration.}

\item{n_folds}{number of folds for cross-validation}

\item{reduced}{if TRUE terurns reduced outpur without specific regression details.}
}
\description{
Impute data to from the period 0 dataframe to the period 1 using "lassopmm" logic.
}
